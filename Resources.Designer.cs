//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VistaDB.NetStandard {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VistaDB.NetStandard.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;DocumentElement&gt;
        ///	&lt;DataTypes&gt;
        ///		&lt;TypeName&gt;char&lt;/TypeName&gt;
        ///		&lt;ProviderDbType&gt;1&lt;/ProviderDbType&gt;
        ///		&lt;ColumnSize&gt;8192&lt;/ColumnSize&gt;
        ///		&lt;CreateParameters&gt;length&lt;/CreateParameters&gt;
        ///		&lt;DataType&gt;System.String&lt;/DataType&gt;
        ///		&lt;CreateFormat&gt;char({0})&lt;/CreateFormat&gt;
        ///		&lt;IsAutoIncrementable&gt;false&lt;/IsAutoIncrementable&gt;
        ///		&lt;IsCaseSensitive&gt;false&lt;/IsCaseSensitive&gt;
        ///		&lt;IsFixedLength&gt;true&lt;/IsFixedLength&gt;
        ///		&lt;IsFixedPrecisionScale&gt;false&lt;/IsFixedPrecisionScale&gt;
        ///		&lt;IsLong&gt;false&lt;/IsLo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataTypes {
            get {
                return ResourceManager.GetString("DataTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;DocumentElement&gt;
        ///  &lt;MetaDataCollections&gt;
        ///    &lt;CollectionName&gt;MetaDataCollections&lt;/CollectionName&gt;
        ///    &lt;NumberOfRestrictions&gt;0&lt;/NumberOfRestrictions&gt;
        ///    &lt;NumberOfIdentifierParts&gt;0&lt;/NumberOfIdentifierParts&gt;
        ///  &lt;/MetaDataCollections&gt;
        ///  &lt;MetaDataCollections&gt;
        ///    &lt;CollectionName&gt;DataSourceInformation&lt;/CollectionName&gt;
        ///    &lt;NumberOfRestrictions&gt;0&lt;/NumberOfRestrictions&gt;
        ///    &lt;NumberOfIdentifierParts&gt;0&lt;/NumberOfIdentifierParts&gt;
        ///  &lt;/MetaDataCollections&gt;
        ///  &lt;MetaDataC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetaDataCollections {
            get {
                return ResourceManager.GetString("MetaDataCollections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADD
        ///ALL
        ///ALTER
        ///AND
        ///ANY
        ///AS
        ///ASC
        ///AUTHORIZATION
        ///BACKUP
        ///BEGIN
        ///BETWEEN
        ///BREAK
        ///BROWSE
        ///BULK
        ///BY
        ///CASCADE
        ///CASE
        ///CHECK
        ///CHECKPOINT
        ///CLOSE
        ///CLUSTERED
        ///COALESCE
        ///COLLATE
        ///COLUMN
        ///COMMIT
        ///COMPUTE
        ///CONSTRAINT
        ///CONTAINS
        ///CONTAINSTABLE
        ///CONTINUE
        ///CONVERT
        ///CREATE
        ///CROSS
        ///CURRENT
        ///CURRENT_DATE
        ///CURRENT_TIME
        ///CURRENT_TIMESTAMP
        ///CURRENT_USER
        ///CURSOR
        ///DATABASE
        ///DATETIME2
        ///DATETIMEOFFSET
        ///DBCC
        ///DEALLOCATE
        ///DECLARE
        ///DEFAULT
        ///DELETE
        ///DENY
        ///DESC
        ///DISK
        ///DISTINCT
        ///DISTRIBUTED
        ///DOUBLE
        ///DROP
        ///DUMP
        ///ELSE
        ///END
        ///ERRLVL
        ///ESCAPE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReservedWords_VDB4 {
            get {
                return ResourceManager.GetString("ReservedWords_VDB4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///
        ///&lt;DocumentElement&gt;
        ///  &lt;Restrictions&gt;
        ///    &lt;CollectionName&gt;Columns&lt;/CollectionName&gt;
        ///    &lt;RestrictionName&gt;Table&lt;/RestrictionName&gt;
        ///    &lt;RestrictionNumber&gt;3&lt;/RestrictionNumber&gt;
        ///  &lt;/Restrictions&gt;
        ///  &lt;Restrictions&gt;
        ///    &lt;CollectionName&gt;Columns&lt;/CollectionName&gt;
        ///    &lt;RestrictionName&gt;Column&lt;/RestrictionName&gt;
        ///    &lt;RestrictionNumber&gt;4&lt;/RestrictionNumber&gt;
        ///  &lt;/Restrictions&gt;
        ///  &lt;Restrictions&gt;
        ///    &lt;CollectionName&gt;Indexes&lt;/CollectionName&gt;
        ///    &lt;RestrictionName&gt;Table&lt;/Restric [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Restrictions {
            get {
                return ResourceManager.GetString("Restrictions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to able
        ///about
        ///above
        ///according
        ///accordingly
        ///across
        ///actually
        ///after
        ///afterwards
        ///again
        ///against
        ///ain&apos;t
        ///all
        ///allow
        ///allows
        ///almost
        ///alone
        ///along
        ///already
        ///also
        ///although
        ///always
        ///am
        ///among
        ///amongst
        ///an
        ///and
        ///another
        ///any
        ///anybody
        ///anyhow
        ///anyone
        ///anything
        ///anyway
        ///anyways
        ///anywhere
        ///apart
        ///appear
        ///appreciate
        ///appropriate
        ///are
        ///aren&apos;t
        ///around
        ///as
        ///aside
        ///ask
        ///asking
        ///associated
        ///at
        ///available
        ///away
        ///awfully
        ///be
        ///became
        ///because
        ///become
        ///becomes
        ///becoming
        ///been
        ///before
        ///beforehand
        ///behind
        ///being
        ///believe
        ///bel [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StopWords_EN {
            get {
                return ResourceManager.GetString("StopWords_EN", resourceCulture);
            }
        }
    }
}
